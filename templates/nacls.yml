AWSTemplateFormatVersion: '2010-09-09'


Parameters:

  vpcId:
    Type: String
    Description: "Id of our VPC"

  vpcCidr:
    Type: String
    Description: "CIDR block of the VPC"

  publicSubnetA:
    Type: String

  publicSubnetB:
    Type: String

  privateSubnetA:
    Type: String

  privateSubnetB:
    Type: String

  isolatedSubnetA:
    Type: String

  isolatedSubnetB:
    Type: String


Resources:

  NaclPublic:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-public"

  NaclPrivate:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-private"

  NaclIsolated:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-isolated"

  #
  # Ingress and egress NACLs for public subnets
  #

  NaclEntryPublicIngress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref NaclPublic
      PortRange:
        From: 80
        To: 80

  NaclEntryPublicIngress2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: 6
      RuleAction: allow
      RuleNumber: 200
      NetworkAclId: !Ref NaclPublic
      PortRange:
        From: 1024
        To: 65535

  NaclEntryPublicEgress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref NaclPublic
      PortRange:
        From: 1024
        To: 65535

  NaclEntryPublicEgress2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      Protocol: 6
      RuleAction: allow
      RuleNumber: 200
      NetworkAclId: !Ref NaclPublic
      PortRange:
        From: 443
        To: 443

  #
  # Ingress and egress NACLs for private subnets
  #

  NaclEntryPrivateIngress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref NaclPrivate
      PortRange:
        From: 80
        To: 80

  NaclEntryPrivateIngress2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: 6
      RuleAction: allow
      RuleNumber: 200
      NetworkAclId: !Ref NaclPrivate
      PortRange:
        From: 1024
        To: 65535

  NaclEntryPrivateEgress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref NaclPrivate
      PortRange:
        From: 1024
        To: 65535

  NaclEntryPrivateEgress2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      Protocol: 6
      RuleAction: allow
      RuleNumber: 200
      NetworkAclId: !Ref NaclPrivate
      PortRange:
        From: 443
        To: 443

  #
  # Ingress and egress NACLs for isolated subnets
  #

  NaclEntryIsolatedIngress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !Ref vpcCidr
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref NaclIsolated
      PortRange:
        From: 3306
        To: 3306

  NaclEntryIsolatedEgress1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !Ref vpcCidr
      Egress: true
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref NaclIsolated
      PortRange:
        From: 1024
        To: 65535

  #
  # Nacl-to-subnet associations
  #

  NaclToPublicA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NaclPublic
      SubnetId: !Ref publicSubnetA

  NaclToPublicB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NaclPublic
      SubnetId: !Ref publicSubnetB

  NaclToPrivateA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NaclPrivate
      SubnetId: !Ref privateSubnetA

  NaclToPrivateB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NaclPrivate
      SubnetId: !Ref privateSubnetB

  NaclToIsolatedA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NaclIsolated
      SubnetId: !Ref isolatedSubnetA

  NaclToIsolatedB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NaclIsolated
      SubnetId: !Ref isolatedSubnetB
